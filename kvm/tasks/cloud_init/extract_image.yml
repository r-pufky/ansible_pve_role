---
###############################################################################
# Extract Local Cloudinit Image
###############################################################################
# Downloaded cloud init images must be extracted and converted to be used as a
# disk image.
#
# Args:
#   _pve_vm: dict kvm_config parse options.
#   _pve_cloud_init_disk: string full local path disk image ready to import
#       into vm.
#   _pve_cloud_init_disk_template: string full local path for staging the
#       decompressed, but not converted disk image.
#   pve_cloud_init_cache: string cluster node cloudinit template location.
#
# Reference:
# * https://pve.proxmox.com/pve-docs/qm.1.html
# * https://linux.die.net/man/1/qemu-img

- name: '{{ _pve_vm.vmid }} cloud init | check if previously extracted'
  ansible.builtin.stat:
    path: '{{ _pve_cloud_init_disk }}'
    get_checksum:   false
    get_attributes: false
    get_mime:       false
  register: _pve_extracted_disk
  delegate_to: '{{ _pve_vm.node }}'

- name: '{{ _pve_vm.vmid }} cloud init | extracting template image'
  block:
    - name: '{{ _pve_vm.vmid }} cloud init | extracting (this may take a while)'
      ansible.builtin.debug:
        msg: |
          Extracting: {{ _pve_vm.template.file }}

    - name: '{{ _pve_vm.vmid }} cloud init | extracting image'
      ansible.builtin.unarchive:
        src:        '{{ pve_cloud_init_cache }}/{{ _pve_vm.template.file }}'
        remote_src: true
        dest:       '{{ pve_cloud_init_cache }}'
        include:    'disk.raw'
        owner:      'root'
        group:      'root'
        mode:       0644
      delegate_to: '{{ _pve_vm.node }}'

    - name: '{{ _pve_vm.vmid }} cloud init | stage cloud init image'
      ansible.builtin.command: 'mv "{{ pve_cloud_init_cache }}/disk.raw" "{{ _pve_cloud_init_disk }}"'
      delegate_to: '{{ _pve_vm.node }}'
  when: |
    _pve_vm.template.extension == 'tar.xz' and
    not _pve_extracted_disk.stat.exists

- name: '{{ _pve_vm.vmid }} cloud init | converting cloud init image to target format'
  ansible.builtin.command: 'qemu-img convert -f {{ _pve_vm.template.extension }} -O {{ _pve_vm.root.format }} "{{ _pve_cloud_init_disk_template }}" "{{ _pve_cloud_init_disk }}"'
  delegate_to: '{{ _pve_vm.node }}'
  when: |
    _pve_vm.template.extension != 'tar.xz' and
    not _pve_extracted_disk.stat.exists
