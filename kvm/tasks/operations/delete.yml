---
###############################################################################
# Destroy KVM Container
###############################################################################
# Destroy an KVM container and all related configurations/virtual disks.
#
# Hosts string will be split on commas, stripped of whitespace, and processed
# per defined, validated host. This should be set on the command line, and
# broken down before passed to delete.
#
# NOTE: This is the 'host.pve_kvm.name' setting.
#
# valid forms of pve_destroy_hosts:
#   'vtest.example.com'
#   'vtest.example.com,vtest2.example.com'
#   ' vtest.example.com, vtest2.example.com '
#
# Exit codes:
#   0: destroyed success.
#   2: container does not exist to destroy.
#
# Args:
#   destroy_host: string FQDN host defined in hosts file for container to be
#   destroyed.
#   pve_image_map: dict template mapping.
#
# Reference:
# * https://pve.proxmox.com/pve-docs/qm.1.html

- name: 'delete | validate selected host {{ destroy_host }}'
  ansible.builtin.assert:
    that:
      - destroy_host is defined
      - destroy_host in groups["all"]

- name: 'delete | get host information {{ destroy_host }}'
  ansible.builtin.set_fact:
    _pve_destroy_host: '{{ hostvars[destroy_host] }}'

- name: 'delete | kvm host detected and validated'
  block:
    - name: 'delete kvm | get container config'
      kvm_config:
        vmid:       '{{ _pve_destroy_host.pve_kvm.vmid }}'
        node:       '{{ _pve_destroy_host.pve_kvm.node }}'
        template:   '{{ pve_image_map[_pve_destroy_host.pve_kvm.template]|default(omit) }}'
        force_stop: '{{ _pve_destroy_host.pve_kvm.force_stop|default(omit) }}'
        cloud_init: '{{ _pve_destroy_host.pve_kvm.cloud_init|default(omit) }}'
        config:     '{{ _pve_destroy_host.pve_kvm.config  }}'
      register: _pve_vm_config

    - name: 'delete | DESTRUCTION WARNING'
      ansible.builtin.debug:
        msg: |
          Manually halting execution for confirmation.

            VM {{ _pve_destroy.vmid }}/{{ _pve_destroy.config.name }} will be DESTROYED

              * All attached virtual disks will be deleted.
              * All configuration files will be deleted.
              * VM will be removed.
      when: pve_destroy_pause

    - name: 'delete | pause until manually confirmed'
      ansible.builtin.pause:
        echo: false
      when: pve_destroy_pause

    - name: 'delete | forcing shutdown (may take a while)'
      ansible.builtin.debug:
        msg: |
          KVM is being forced shutdown.

          This may take up to {{ pve_kvm_shutdown_timeout }} seconds.

    - name: 'delete | force shutdown {{ _pve_destroy.vmid }}/{{ _pve_destroy.config.name }}'
      ansible.builtin.command: 'qm shutdown {{ _pve_destroy.vmid }} --forceStop 1 --timeout {{ pve_kvm_shutdown_timeout }}'
      delegate_to: '{{ _pve_destroy.node }}'

    - name: 'delete | deleting {{ _pve_destroy.vmid }}/{{ _pve_destroy.config.name }}'
      ansible.builtin.command: 'qm destroy {{ _pve_destroy.vmid }} --skiplock 1 --purge 1'
      delegate_to: '{{ _pve_destroy.node }}'
      register: _pve_destroy_results
      failed_when: _pve_destroy_results.rc not in (0, 2)
  when: _pve_destroy_host.pve_kvm is defined
