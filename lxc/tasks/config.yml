---
###############################################################################
# Get LXC Configuration & Duplicate Status
###############################################################################
# Determine if the container already exists in the cluster and generate the
# parsed pve_lxc option using the integrated library.
#
# Mirrored config in kvm/tasks/config.yml. Even though the variables are
# executed in blocks originally, the first block registered results will be
# overwritten with the second blocks registered results (with an uninitialized
# variable); resulting in failure of dupe detection / variable undefined.
#
# Use 'pct status' to get existing cluster vms (lxc) status.
#
# Exit codes captured:
#   0: vm exists
#   2: vm does not exist
#
# Args:
#   host: dict host dictionary (pve_kvm) to process data for.
#   pve_image_map: dict disk image metadata for container creation.
#
# Generates:
#   _pve_vm: dict parsed pve_{kvm,lxc} raw yaml values.
#   _pve_vm_exists: boolean true if the VM already exists.
#
# Reference:
# * https://pve.proxmox.com/pve-docs/pct.1.html
# * https://pve.proxmox.com/pve-docs/pve-admin-guide.html

- name: '{{ host.value.pve_lxc.vmid }} | parse config'
  lxc_config:
    vmid:       '{{ host.value.pve_lxc.vmid }}'
    node:       '{{ host.value.pve_lxc.node }}'
    template:   '{{ pve_image_map[host.value.pve_lxc.template]|default(omit) }}'
    force_stop: '{{ host.value.pve_lxc.force_stop|default(omit) }}'
    firewall:   '{{ host.value.pve_lxc.firewall|default(omit) }}'
    config:     '{{ host.value.pve_lxc.config  }}'
  register: _pve_vm

- name: '{{ _pve_vm.vmid }} | set options'
  ansible.builtin.set_fact:
    _pve_vm_exists: false

- name: '{{ _pve_vm.vmid }} | determine cluster vm status'
  ansible.builtin.command: 'pct status {{ _pve_vm.vmid }}'
  changed_when: false
  register: _pve_cluster_vm_status
  failed_when: _pve_cluster_vm_status.rc not in (0, 2)
  delegate_to: '{{ _pve_vm.node }}'

- name: '{{ _pve_vm.vmid }} | determine if container exists'
  ansible.builtin.set_fact:
    _pve_vm_exists: true
  when: _pve_cluster_vm_status.rc == 0
