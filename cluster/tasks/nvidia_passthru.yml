---
###############################################################################
# NVIDIA Hardware Passthru
###############################################################################
# Create GPU hardware passthru for a given cluster node.
#
# VM configuration options are listed with correct values once configuration is
# complete.
#
# Args:
#   pve_nvidia_driver: string full or partial driver version to install.
#   pve_debian_base: string debian release codename to install backports
#       from, empty string disables.
#   pve_nvidia_passthru: boolean true to enable GPU passthru.
#
# Reference:
# * https://pve.proxmox.com/pve-docs/pvesh.1.html
# * https://passbe.com/2020/02/19/gpu-nvidia-passthrough-on-proxmox-lxc-container/
# * https://pve.proxmox.com/pve-docs/pve-admin-guide.html
# * https://wiki.debian.org/NvidiaGraphicsDrivers

- name: 'packages | add GPU passthru repositories'
  block:
    - name: 'packages | add non-free (for GPU passthrough support) repo'
      ansible.builtin.apt_repository:
        repo:     '{{ item }}'
        filename: 'debian_core'
        state:    'present'
        update_cache: true
      loop:
        - 'deb http://ftp.us.debian.org/debian {{ pve_debian_base }} main contrib non-free'
        - 'deb http://ftp.us.debian.org/debian {{ pve_debian_base }}-updates main contrib non-free'
        - 'deb http://security.debian.org {{ pve_debian_base }}-security main contrib non-free'

    - name: 'packages | remove original apt sources'
      ansible.builtin.apt_repository:
        repo:  '{{ item }}'
        state: 'absent'
        update_cache: true
      loop:
        - 'deb http://ftp.us.debian.org/debian {{ pve_debian_base }} main contrib'
        - 'deb http://ftp.us.debian.org/debian {{ pve_debian_base }}-updates main contrib'
        - 'deb http://security.debian.org {{ pve_debian_base }}-security main contrib'
  when: pve_nvidia_passthru

- name: 'passthru | install pve headers'
  ansible.builtin.apt:
    name:  'pve-headers'
    state: 'latest'
    update_cache: true

- name: 'passthru | detect GPU hardware'
  ansible.builtin.shell: 'set -o pipefail && lspci | grep -i nvidia'
  args:
    executable: '/bin/bash'
  register: _pve_gpu_detect
  changed_when: false
  failed_when: _pve_gpu_detect.rc != 0

- name: 'passthru | Enable backports for Nvidia GPUs'
  block:

    - name: 'passthru | add debian backports for nvidia support'
      ansible.builtin.apt_repository:
        repo:     'deb http://deb.debian.org/debian {{ pve_debian_base }}-backports main contrib non-free'
        filename: 'backports'
        state:    'present'
        update_cache: true

    - name: 'passthru | add debian source backports for nvidia support'
      ansible.builtin.apt_repository:
        repo:     'deb http://deb.debian.org/debian {{ pve_debian_base }}-backports main contrib non-free'
        filename: 'backports_source'
        state:    'present'
        update_cache: true

    - name: 'passthru | install nivida drivers from backports'
      ansible.builtin.apt:
        name:
          - 'nvidia-driver={{ pve_nvidia_driver }}*'
          - 'nvidia-smi={{ pve_nvidia_driver }}*'
        default_release: '{{ pve_debian_base }}-backports'
        update_cache: true
        state: 'present'
      register: _pve_gpu_host_driver

  when: pve_debian_base|length > 0

- name: 'passthru | install nvidia drivers'
  ansible.builtin.apt:
    name:
      - 'nvidia-driver={{ pve_nvidia_driver }}*'
      - 'nvidia-smi={{ pve_nvidia_driver }}*'
    update_cache: true
    state: 'present'
  register: _pve_gpu_host_driver
  when: pve_debian_base|length == 0

- name: 'passthru | enable nvidia drivers on boot'
  ansible.builtin.copy:
    src:   'etc/modules-load.d/nvidia.conf'
    dest:  '/etc/modules-load.d/nvidia.conf'
    owner: 'root'
    group: 'root'
    mode:  0644
    force: true
  register: _pve_gpu_host_modules

- name: 'passthru | add nvidia udev rules to populate /dev'
  ansible.builtin.copy:
    src:   'etc/udev/rules.d/70-nvidia.rules'
    dest:  '/etc/udev/rules.d/70-nvidia.rules'
    owner: 'root'
    group: 'root'
    mode:  0644
    force: true
  register: _pve_gpu_host_udev

- name: 'passthru | rebooting to enable host-passthru' # noqa no-handler execute immediately
  ansible.builtin.reboot:
    reboot_timeout: 3600
  when: |
    _pve_gpu_host_driver.changed or
    _pve_gpu_host_modules.changed or
    _pve_gpu_host_udev.changed

- name: 'passthru | verify nvidia drivers are loaded'
  ansible.builtin.command: 'nvidia-smi'
  register: _pve_gpu_host_validate
  changed_when: false
  failed_when: _pve_gpu_host_validate.rc != 0

# Get the device IDs from /dev/dri/* and /dev/nvidia* (5th column).
# https://passbe.com/2020/02/19/gpu-nvidia-passthrough-on-proxmox-lxc-container/
- name: 'passthru | determine passthru device IDs'
  ansible.builtin.shell: |
    set -o pipefail && find /dev/dri/ /dev/nvidia* -type c | xargs ls -lA | awk '{ print $5 }' | sed '/^$/d' | sed 's/,*$//g' | sort | uniq | awk '{ print "lxc.cgroup2.devices.allow: c "$1":* rwm" }'
  args:
    executable: '/bin/bash'
  register: _pve_gpu_host_dev
  changed_when: false

- name: 'passthru | determine passthru character devices'
  ansible.builtin.shell: "set -o pipefail && find /dev/nvidia* -type c ! -name nvidia-cap* | awk '{ print \"lxc.mount.entry: \"$1\" \"$1\" none bind,optional,create=file\" }'"
  args:
    executable: '/bin/bash'
  register: _pve_gpu_host_cdev
  changed_when: false

- name: 'passthru | NVIDIA GPU DEVICE ID PASSTHRU (add to container)'
  ansible.builtin.debug:
    msg: |
      Autogenerated LXC config suggestion:

      {{ _pve_gpu_host_dev.stdout }}
      {{ _pve_gpu_host_cdev.stdout }}
      lxc.mount.entry: /dev/dri dev/dri none bind,optional,create=dir
      lxc.mount.entry: /dev/nvidia-caps /dev/nvidia-caps none bind,optional,create=dir
